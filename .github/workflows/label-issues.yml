name: Label Issues and PRs

on:
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited]

permissions:
  issues: write
  pull-requests: write

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - name: Label based on title
        uses: actions/github-script@v7
        with:
          script: |
            const issue = context.payload.issue || context.payload.pull_request;
            const title = issue.title.toLowerCase();
            const labels = [];

            // Extract label hints from title
            if (title.includes('[spark]') || title.includes('spark:')) {
              labels.push('spark');
            }
            if (title.includes('[bug]') || title.includes('bug:')) {
              labels.push('bug');
            }
            if (title.includes('[feature]') || title.includes('feature:')) {
              labels.push('feature');
            }
            if (title.includes('[docs]') || title.includes('documentation')) {
              labels.push('documentation');
            }
            if (title.includes('[pages') || title.includes('github pages')) {
              labels.push('github-pages');
            }
            if (title.includes('[automation]') || title.includes('workflow')) {
              labels.push('automation');
            }
            if (title.includes('[project management]')) {
              labels.push('project-management');
            }
            if (title.includes('[contributor experience]')) {
              labels.push('contributor-experience');
            }
            if (title.includes('[knowledge base]') || title.includes('[sdlc]')) {
              labels.push('knowledge-base');
            }
            if (title.includes('[templates') || title.includes('[labels]')) {
              labels.push('templates');
            }

            // Add triage label to new issues without other labels
            if (labels.length === 0 && context.payload.action === 'opened' && context.payload.issue) {
              labels.push('triage');
            }

            // Add labels if any were identified
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: labels
              });
            }
